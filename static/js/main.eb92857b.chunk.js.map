{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","state","console","log","initials","sessionStorage","getItem","dispatch","signOut","getState","getFirebase","auth","then","type","removeItem","props","useEffect","className","to","onClick","SignedOutLinks","firebase","profile","links","uid","ProjecTSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","ProjectSummary","Notifications","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","content","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","getFirestore","citiesRef","doc","signInWithEmailAndPassword","get","exists","setItem","payload","catch","err","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","resp","user","set","CreateProject","createProject","history","push","authorId","alert","add","Date","error","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","fbConfig","createFirestoreInstance","userProfile","presence","sessions","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.eb92857b.chunk.js","sourcesContent":["import React,{useEffect} from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signIn, signOut } from '../../store/actions/authActions'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nconst SignedInLinks = (props) => {\r\n  console.log(\"anushka11\",props);\r\n\r\n  useEffect(()=>{\r\n    //window.location.reload(true);\r\n  });\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n          {props.initials}\r\n        </NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  console.log(\"cat\",dispatch);\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n    \r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"dog2\",state);\r\n  return{\r\n    initials:sessionStorage.getItem(\"newId\")\r\n   // newId:\r\n    }\r\n  }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n  console.log(\"signin\",credentials)\r\n    return (dispatch, getState, {getFirebase,getFirestore}) => {\r\n      debugger\r\n      const firebase = getFirebase();\r\n      const firestore=getFirestore();\r\n      const authorId = getState().firebase.auth.uid;\r\n      var citiesRef = firestore.collection(\"users\").doc(sessionStorage.getItem(\"userId\"));\r\n      console.log(\"citiesref\", citiesRef);\r\n      \r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n      ).then(() => {\r\n        citiesRef.get().then(function(doc) {\r\n          debugger\r\n          if(doc.exists){\r\n            console.log(\"Document data:\", doc.data());\r\n            sessionStorage.setItem(\"newId\",doc.data().initials);\r\n            dispatch({ \r\n              type: 'LOGIN_SUCCESS',\r\n              payload: sessionStorage.getItem(\"newId\")\r\n            });\r\n          }\r\n        });\r\n        \r\n       // sessionStorage.setItem(\"newId\", )\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  }\r\n  \r\n  export const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        sessionStorage.removeItem(\"newId\");\r\n      });\r\n    }\r\n  }\r\n  \r\n  export const signUp = (newUser) => {\r\n    debugger\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n        sessionStorage.setItem(\"userId\", resp.user.uid);\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n       \r\n      }).then(() => {\r\n       // var docRef = firestore.collection('users').doc(resp.user.uid);\r\n        //sessionStorage.setItem(\"newId\",newUser.firstName[0] + newUser.lastName[0])\r\n        //console.log(\"dog4\",firestore,sessionStorage);\r\n        /*docRef.get().then(function(doc) {\r\n          if (doc.exists) {\r\n              console.log(\"Document data:\", doc.data());\r\n          } else {\r\n              // doc.data() will be undefined in this case\r\n              console.log(\"No such document!\");\r\n          }\r\n      })*/\r\n      console.log(`firstname, ${newUser.firstName[0]} ${newUser.lastName[0]}`);\r\n      sessionStorage.setItem(\"newId\",newUser.firstName[0] + newUser.lastName[0])\r\n        dispatch({\r\n           type: 'SIGNUP_SUCCESS',\r\n           payload: sessionStorage.getItem(\"newId\")\r\n          });\r\n          \r\n\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nconst SignedOutLinks=()=>{\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nexport default SignedOutLinks;","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\nimport { localeData } from 'moment'\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  // console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n\r\n  return (\r\n\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">ProjectPlanner</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"paul\",state.auth)\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\r\nimport moment from 'moment'\r\nconst ProjecTSummary=({project})=>{\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title \"><b>{project.title}</b></span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n      </div>\r\n    )\r\n}\r\nexport default ProjecTSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom'\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project=>{\r\n        return(\r\n          <Link to={'/project/'+project.id} key={project.id} >\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList","import React from 'react';\r\nconst Notifications=()=>{\r\n    return(\r\n        <div>\r\n            <p>Notifications</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Notifications;","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    \r\n    // console.log(this.props);\r\n    const { projects,auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    \r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth :state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection:'projects'}\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails= (props)=> {\r\n    const { project, auth }=props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    if(project){\r\n        return(\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{ project.title }</span>\r\n                        <p>{ project.content }</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n            )\r\n    }else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading Project...</p>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n\r\nconst mapStateToProps=(state, ownProps)=>{\r\n    const id=ownProps.match.params.id;\r\n    const projects=state.firestore.data.projects;\r\n    const project=projects?projects[id]:null\r\n    return{\r\n        project:project,\r\n        auth: state.firebase.auth \r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth:state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\nclass SignUp extends Component {\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">SIGN UP</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError?<p>{authError}</p>:null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        signUp:(newUser)=>dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state={\r\n        title:'',\r\n        content:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.createProject(this.state); \r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' /> \r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"title\">Project Title</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      auth: state.firebase.auth\r\n    }\r\n  }  \r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        createProject:(project)=>dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n  try{\r\n\r\n\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n      // make async call to database\r\n      \r\n      const firestore=getFirestore();\r\n      const authorId = getState().firebase.auth.uid;\r\n      var citiesRef = firestore.collection(\"users\").doc(authorId);\r\n\r\n      //console.log(citiesRef);\r\n  \r\n      citiesRef.get().then(function(doc) {\r\n        if (doc.exists) {\r\n          alert(\"alert\");\r\n          ////const profile=getState().firebase.profile;\r\n        //// console.log(\"anushka1\",profile)\r\n          //const authorId=getState().firebase.auth.uid;\r\n            console.log(\"Document data:\", doc.data());\r\n            firestore.collection('projects').add({\r\n              ...project,\r\n              authorFirstName:doc.data().firstName,\r\n              authorLastName:doc.data().lastName,\r\n              ///authorId:doc.data().authorId,\r\n              createdAt: new Date()\r\n            }).then(()=>{\r\n              dispatch({ type: 'CREATE_PROJECT', payload:project });\r\n            }).catch((err)=>{\r\n              dispatch({type:'CREATE_PROJECT_ERROR', err});\r\n            })\r\n        } else {\r\n            // doc.data() will be undefined in this case\r\n            console.log(\"No such document!\");\r\n        }\r\n    }).catch(function(error) {\r\n        console.log(\"Error getting document:\", error);\r\n    });\r\n\r\n      \r\n    }\r\n  }catch(e)\r\n  {\r\n    console.log(\"anushkammm\",e)\r\n  }\r\n  };\r\n\r\n  /*export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n      const firestore = getFirestore();\r\n      const profile = getState().firebase.profile;\r\n      const authorId = getState().firebase.auth.uid;\r\n      firestore.collection('projects').add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      }).then(() => {\r\n        dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n      }).catch(err => {\r\n        dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n      });\r\n    }\r\n  };*/","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path='/' component={Dashboard}></Route>\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","const initState={\r\n    authError:null,\r\n    initials: \"kaushik\"\r\n}\r\nconst authReducer=(state=initState, action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError:'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login syccess');\r\n            return {\r\n                ...state,\r\n                initials: action.payload,\r\n                authError:null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return{\r\n                ...state,\r\n                initials: action.payload,\r\n                authError:null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default authReducer\r\n\r\n","const initState = {\r\n    projects: [\r\n      {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n      {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n      {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n  }\r\n  \r\n  const projectReducer = (state = initState, action) => {\r\n    console.log(\"anushka\",state)\r\n    switch (action.type) {\r\n      \r\n      case 'CREATE_PROJECT':\r\n        //alert(action.type);\r\n        return {\r\n          ...state,\r\n          projects: action.payload\r\n      }\r\n\r\n\r\n      case 'CREATE_PROJECT_ERROR':\r\n        console.log('create project error', action.err);\r\n        return state;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default projectReducer;","import authReducer from './authReducer'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer =  combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCeu42DrewzkuMyWrNE7yuC7ZVMF-7Bufg\",\r\n    authDomain: \"project-planner-c10b7.firebaseapp.com\",\r\n    databaseURL: \"https://project-planner-c10b7.firebaseio.com\",\r\n    projectId: \"project-planner-c10b7\",\r\n    storageBucket: \"project-planner-c10b7.appspot.com\",\r\n    messagingSenderId: \"780394959219\",\r\n    appId: \"1:780394959219:web:c12ba7e316b68e96c93506\",\r\n    measurementId: \"G-WL043JCYZP\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { useSelector  } from 'react-redux'\nimport { isLoaded, reactReduxFirebase  } from 'react-redux-firebase';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport fbConfig from './config/fbConfig'\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport 'firebase/firestore';\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst profileSpecificProps = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n    attachAuthIsReady:true,\n    enableRedirectHandling: false,\n    resetBeforeLogin: false\n  }\nconst rrfConfig = { \n    userProfile: 'projects',\n    useFirestoreForProfile: true\n}\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebase)\n    )\n);\n    const rrfProps = {\n        firebase,\n        config: fbConfig,\n        dispatch: store.dispatch,\n        createFirestoreInstance,\n        userProfile: 'users', // where profiles are stored in database\n        presence: 'presence', // where list of online users is stored in database\n        sessions: 'sessions'\n    }    \n    function AuthIsLoaded({ children }) {\n        const auth = useSelector(state => state.firebase.auth)\n        if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n            return children\n    }\nconst rffProps = {\n    firebase,\n    useFirestoreForProfile: true,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n}\n\nReactDOM.render(<Provider store={store}> <ReactReduxFirebaseProvider {...rrfProps}> <AuthIsLoaded><App /> </AuthIsLoaded></ReactReduxFirebaseProvider></Provider>, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}